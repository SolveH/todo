{"remainingRequest":"/Users/malfha/Documents/git/todo/node_modules/babel-loader/lib/index.js!/Users/malfha/Documents/git/todo/node_modules/eslint-loader/index.js??ref--13-0!/Users/malfha/Documents/git/todo/src/store/index.js","dependencies":[{"path":"/Users/malfha/Documents/git/todo/src/store/index.js","mtime":1597922881570},{"path":"/Users/malfha/Documents/git/todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/malfha/Documents/git/todo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/malfha/Documents/git/todo/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWxmaGEvRG9jdW1lbnRzL2dpdC90b2RvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvbWFsZmhhL0RvY3VtZW50cy9naXQvdG9kby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgVnVlIGZyb20gInZ1ZSI7CmltcG9ydCBWdWV4IGZyb20gInZ1ZXgiOwppbXBvcnQgeyBkYXRhU2VydmljZSB9IGZyb20gIi4uL3NoYXJlZC9kYXRhLnNlcnZpY2UiOwpWdWUudXNlKFZ1ZXgpOwpleHBvcnQgZGVmYXVsdCBuZXcgVnVleC5TdG9yZSh7CiAgc3RhdGU6IHsKICAgIHRvZG9zOiBbXQogIH0sCiAgc3RyaWN0OiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nLAogIGdldHRlcnM6IHsKICAgIGdldFRvZG9zOiBmdW5jdGlvbiBnZXRUb2RvcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudG9kb3M7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIGdldFRvZG9zOiBmdW5jdGlvbiBnZXRUb2RvcyhzdGF0ZSwgdG9kb3MpIHsKICAgICAgc3RhdGUudG9kb3MgPSB0b2RvczsKICAgIH0sCiAgICBhZGRUb2RvOiBmdW5jdGlvbiBhZGRUb2RvKHN0YXRlLCBhZGRlZFRvZG8pIHsKICAgICAgc3RhdGUudG9kb3MucHVzaChhZGRlZFRvZG8pOwogICAgfSwKICAgIGRlbGV0ZVRvZG86IGZ1bmN0aW9uIGRlbGV0ZVRvZG8oc3RhdGUsIHJlbW92ZWRUb2RvSWQpIHsKICAgICAgc3RhdGUudG9kb3MgPSBfdG9Db25zdW1hYmxlQXJyYXkoc3RhdGUudG9kb3MuZmlsdGVyKGZ1bmN0aW9uICh0b2RvKSB7CiAgICAgICAgcmV0dXJuIHRvZG8uaWQgIT09IHJlbW92ZWRUb2RvSWQ7CiAgICAgIH0pKTsKICAgIH0sCiAgICBlZGl0VG9kbzogZnVuY3Rpb24gZWRpdFRvZG8oc3RhdGUsIF9lZGl0VG9kbykgewogICAgICB2YXIgaW5kZXggPSBzdGF0ZS50b2Rvcy5maW5kSW5kZXgoZnVuY3Rpb24gKHQpIHsKICAgICAgICByZXR1cm4gdC5pZCA9PSBfZWRpdFRvZG8uaWQ7CiAgICAgIH0pOwogICAgICBzdGF0ZS50b2Rvcy5zcGxpY2UoaW5kZXgsIDEsIF9lZGl0VG9kbyk7CiAgICAgIHN0YXRlLnRvZG9zID0gX3RvQ29uc3VtYWJsZUFycmF5KHN0YXRlLnRvZG9zKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGdldFRvZG9zOiBmdW5jdGlvbiBnZXRUb2RvcyhfcmVmKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgdG9kb3M7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBkYXRhU2VydmljZS5nZXRUb2RvcygpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICB0b2RvcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoImdldFRvZG9zIiwgdG9kb3MpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgYWRkVG9kbzogZnVuY3Rpb24gYWRkVG9kbyhjb250ZXh0LCBuZXdUb2RvKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBhZGRlZFRvZG87CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBkYXRhU2VydmljZS5hZGRUb2RvKG5ld1RvZG8pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBhZGRlZFRvZG8gPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJhZGRUb2RvIiwgYWRkZWRUb2RvKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZGVsZXRlVG9kbzogZnVuY3Rpb24gZGVsZXRlVG9kbyhjb250ZXh0LCB0b2RvKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciByZW1vdmVkVG9kb0lkOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZGF0YVNlcnZpY2UuZGVsZXRlVG9kbyh0b2RvKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVtb3ZlZFRvZG9JZCA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoImRlbGV0ZVRvZG8iLCByZW1vdmVkVG9kb0lkKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZWRpdFRvZG86IGZ1bmN0aW9uIGVkaXRUb2RvKGNvbnRleHQsIHRvZG8pIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIGVkaXRlZFRvZG87CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBkYXRhU2VydmljZS5lZGl0VG9kbyh0b2RvKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgZWRpdGVkVG9kbyA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoImVkaXRUb2RvIiwgZWRpdGVkVG9kbyk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbW9kdWxlczoge30KfSk7"},{"version":3,"sources":["/Users/malfha/Documents/git/todo/src/store/index.js"],"names":["Vue","Vuex","dataService","use","Store","state","todos","strict","process","env","NODE_ENV","getters","getTodos","mutations","addTodo","addedTodo","push","deleteTodo","removedTodoId","filter","todo","id","editTodo","index","findIndex","t","splice","actions","commit","context","newTodo","editedTodo","modules"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nimport {\n  dataService\n} from \"../shared/data.service\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    todos: [],\n  },\n  strict: process.env.NODE_ENV !== 'production',\n  getters: {\n    getTodos: (state) => state.todos,\n  },\n  mutations: {\n    getTodos: (state, todos) => {\n      state.todos = todos;\n    },\n    addTodo: (state, addedTodo) => {\n      state.todos.push(addedTodo);\n    },\n    deleteTodo: (state, removedTodoId) => {\n      state.todos = [\n        ...state.todos.filter((todo) => todo.id !== removedTodoId),\n      ];\n    },\n    editTodo: (state, editTodo) => {\n      const index = state.todos.findIndex(t => t.id == editTodo.id);\n      state.todos.splice(index, 1, editTodo);\n      state.todos = [...state.todos];\n    }\n  },\n  actions: {\n    async getTodos({\n      commit\n    }) {\n      const todos = await dataService.getTodos();\n      commit(\"getTodos\", todos);\n    },\n    async addTodo(context, newTodo) {\n      const addedTodo = await dataService.addTodo(newTodo);\n      context.commit(\"addTodo\", addedTodo);\n    },\n    async deleteTodo(context, todo) {\n      const removedTodoId = await dataService.deleteTodo(todo);\n      context.commit(\"deleteTodo\", removedTodoId);\n    },\n    async editTodo(context, todo) {\n      const editedTodo = await dataService.editTodo(todo);\n      context.commit(\"editTodo\", editedTodo);\n    },\n  },\n  modules: {},\n});"]}]}